# AWSで始めるWEBアプリ構築 その1
クラウドサービスを使ったシステム構築が増えています。  
ここではるAmazon Web Services(AWS)を使ったWEBアプリケーションの構築手順を説明します。

## 従来の問題点
WEBアプリを開発し一般公開するためには、  
アプリケーションサーバ/データベースサーバ/DNSサーバなどのサーバが必要であり、  
またそれらサーバは24時間365日稼働させる必要があり、  
多くの場合はデータセンターと呼ばれる場所で管理しています。

データセンターでは、ネットワーク/空調/ハードウェア障害等々の様々なことを考えなければならず、  
また維持管理のための運用費など多くのコストがかかっています。

ここで企業システムの主なシステム形態を紹介します。

* オンプレミス  
    自社でデータセンターを保有しシステム構築から運用までする形態

* パブリッククラウド  
    インターネットを介して不特定多数に提供されるクラウドサービスを利用する  
    利用したいサービスを選び利用した分だけ料金を支払うシステム形態  
    提供するサービスによって、Iaas/PasS/Saasなどがある  

* プライベートクラウド  
    特定の企業グループだけに提供されるクラウドサービス  
    グループ企業内でのみデータセンターを共同共有  

## クラウドサービスとは
データセンターでサーバなどを保有するのではなく、  
必要に応じてそれらを利用できるというのが**クラウドシステム**になります。

クラウドシステムでは、システム構築に必要なネットワーク/サーバ/ストレージなどのサービスを提供しています。  
これらサービスはネットワークを介して必要な時に必要な量だけ利用できます。  

代表的なクラウドサービスは下記になります。  

* Amazon Web Services
* Micosoft Azure
* IMB SoftLayer/Bluemix
* Google Cloud Platform
* サクラクラウド
* ニフティクラウド

## クラウドのサービス体系
クラウドが提供するサービスは提供するサービスレイヤーごとに  
次のようなサービスがあります。  

* IaaS(Infrastructure as a Service)  
    サーバーやOS、ネットワークなどを提供するサービス  
    サーバースペックや信頼性/可用性などによって利用料金が異なる  

* Paas(Platform as a Service)  
    ハードウェアに加えて開発環境などのミドルウェアもまとめて提供するサービス  
    開発環境に必要なライブラリや本番環境へのデプロイから  
    サーバーの監視までを自動で行う機能を提供するサービスもある

* Saas(Software as a Service)  
    すでに出来上がった機能を提供するサービス

これらサービスを利用することは下記のメリットがあります。

* 初期投資を抑えられる
* すでにあるシステムを利用するため、システム構築までの時間が短くなる
* システム負荷などによってサーバの構成等を変更できるため無駄なくリソースを利用できる

## AWSのサービス
AWSが提供しているサービスは豊富にあります。  
ただサービスが豊富にありすぎ、
また新サービスの提供が他のクラウドサービスの比ではないため  
利用するサービスが選びずらくなっています。

AWSが提供するサービスは下記のカテゴリに分類できます。

* コンピューテイング
* ストレージ&コンテンツ配信
* データベース
* ネットワーク
* 開発者用ツール
* 管理ツール
* セキュリティ&ID
* 分析
* IoT
* モバイルサービス
* アプリケーションサービス
* エンタープライズアプリケーション

下記に主機能であるコンピューティング/ストレージ&コンテンツ配信/データベース/ネットワークで提供しているサービスを紹介します。

## コンピューテイング
AWSの核のなるサービスがコンピューティングです。  
仮想サーバー機能やコンテナー実行環境のマネージドサービスを提供します。  
下記がコンピューティングサービスの一覧です。  

* Amazon EC2  
    Amazon Elastic Compute Cloudとは、従量課金制の仮想サーバ機能  
    業務システムのLinuxサーバやWindowsサーバなどにあたります。  
    EC2では起動している仮想サーバをインスタンスと呼びます。  

* Amazon EC2 Container Service  
    Dockerを運用するサービス  
    ※Dockerとは、仮想化技術を使ったアプリ実行環境構築のためのツール

* Amazon EC2 Container Registry  
    Dockerイメージの保存と共有をするサービス  
    ※Dockerイメージとは、アプリ実行環境をすべてパッケージングしたもの  
    　これを利用することで他のオンプレミス環境やクラウドシステムへの移行が簡単になる

* AWS Elastic Beanstalk  
    PaaSサービスであるElastic Beanstalkを利用することで,  
    PHP/Rubyなどで開発したアプリを自動でAWSにデプロイすることができる  
    Javaの場合はEclipseにプラグインのAWS Toolkit for Eclipse導入し、  
    開発したWebアプリをデプロイすると、Apach Tomcatが起動したEC2サーバに配置されすぐにサービスが提供できる。　　
    BeanstalkはWebサーバの負荷にあわせて自動でサーバを増強してくれる。

* AWS Lambda  
    クライアントからのリクエスト発生などのタイミングで任意のプログラムを動かすイベントドリブン型のサービス  
    常時稼働する仮想サーバ機能ではないため運用コストが安価

* Auto Sclaing  
    CPU使用率などあらかじめきめられた条件に応じて、  
    EC2インスタンスを自動的に増減するサービス  

* Elastic Load Balancing  
     トラフィックに応じて、複数のEC2インスタンスで負荷分散させるサービス

## ストレージ&コンテンツ配信
データを容易に管理できるサービス
下記のサービスがあります。

* Amazon S3  
    冗長化されたデータストレージサービス  
    業務システムでのファイルサーバ

* Amazon CloudFront  
    世界中にコンテンツを配信するためのネットワークサービス  
    例えば、エッジロケーションと呼ばれる拠点に自動的に配信し、  
    利用者は最も近いエッジロケーションからコンテンツを取得する

* Amazon EBS  
    Amazon EC2のデータを保持するストレージサービス  
    EC2のハードディスと/SSDのような役割  
     
* Amazon Elastic File System  
    EC2の共有ファイルストレージサービス  
    ファイルの追加/削除にともなって自動的に容量を拡張/縮小するサービス  
     
* Amazon Glacier  
    低安価で利用できるストレージサービス  
    使用頻度は低いが猟奇保存したいデータに利用する  
     
* Amazon Import /Export Showball  
    大容量データの転送サービス  
    データセンターの移設や災害時のデータ移行で利用する
     
* Amazon Storage Geteway  
    オンプレミスとAWSを接続するストレージゲートウェイ
    
## データベース
クラウド上の仮想データベース機能  
MySQL/Oracle/SQL Server/PostgresなどのRDBMSだけでなく、  
ビックデータなどで利用されるNoSQLも利用可能です。

* Amazon RDS  
    RDBMSを構築/運用するサービス  
    利用できるDBは下記
    * MySql
    * Oracle
    * SQL Server
    * Postgres SQL
    * Amazon Aurora

* Amazon Database Migration Service  
    最小限の停止時間でデータベースを移行できるサービス  
    オンプレミス化のデータベースからの移行などに利用

* Amazon DynamoDB  
    NoSQLデータベースサービスを構築/運用するサービス

* Amazon ElasticCache  
    クラウドでのメモリ内キャッシュの管理ができるサービス

* Amazon Redshift  
    ビッグデータを分析できるサービス

## ネットワーク
クラウド上に任意のネットワークを構築するサービス

* Amazon VPC  
    AWS内にプライベートネットワークを構築するためのサービス  

* AWS Direct Connect  
    オンプレミスのネットワークとAWSのVPCネットワークとを直接接続するための専用線サービス

* Amazon Route  
    ドメイン名とIPアドレスを対応付けるDNSシステムを構築するためのサービス  

## AWSクラウドデザインパターン
AWSは数多くのサービスが提供されており、複数のサービスを組み合わせてインフラを構築します。  
その際、どのサービスを組み合わせるかが重要になるため、インフラアーキテクチャー設計をする時は、  
AWSクラウドデザインパターンを参考するとよいです。

* Multi-Serverパターン(サーバーの冗長化)  
    EC2インスタンスを複数台並べ、ロードバランサー機能であるELBが処理を振り分ける構成  
    インスタンスの障害によってシステム全体が停止することがないので、システム可用性が向上します。
    ![MultiServer](./img/MultiServer.jpeg "MultiServer")

* Scla Upパターン(サーバーの拡張/縮小)  
    サーバのスペックをリクエストの多寡によって自由に拡張/縮小する構成  
    自動的にサーバを拡張できるため、厳密なシステムリソースの見積もりが不要  
    またサーバの縮小もできるため、状況から低スペックサーバに切り替えられるので無駄なコストを減らせる
    ![SclaUp](./img/SclaUp.jpeg "SclaUp")

* DB Replicationパターン(データベースの複製)  
    予期せぬシステム障害や災害などでデータが消滅しないよう、データベースの内容を複製する構成  
    ![DBReplication](./img/DBReplication.jpeg "DBReplication")

* Functional Firewallパターン(階層別アクセス)  
    サーバの役割に応じてアクセス制限をかける構成  
    EC2インスタンスなどにセキュリティグループを設定し必要な通信のみを許可する  
    サーバ一台ごとに設定するとミスが発生するため、  
    サーバーの階層ごとに論理的なグループを作りグループ単位でセキュリティグループを設定するのが一般的
    ![FunctionalFirewall](./img/FunctionalFirewall.jpeg "FunctionalFirewall")

## AWSのアカウント登録
AWSを利用するためにはアカウント登録が必要です。  
また登録するためにはメールアカウント/クレジットカード/本人確認のための電話番号が必要となります。

下記にAWSアカウントの登録手順を説明します。

* サインイン&AWSアカウントの作成  
    * [このページ](http://aws.amazon.com/jp/)に
    アクセスし、サインアップをクリック
    ![001](./img/001.jpeg "001")

    * 新規アカウント作成画面でメールアドレスを入力し「私は新規ユーザです。」にチェックを入れた後、  
      サインインボタンをクリック
    ![002](./img/002.jpeg "002")

* ログイン情報の登録  
    * アカウント認証情報画面で各情報を入力した後、アカウント作成ボタンを押下
    ![003](./img/003.jpeg "003")   

* 連絡先情報の入力  
    * 連絡先情報入力画面で各連絡先情報を入力し、セキュリティチェック/利用規約の同意を実施した後、  
    「アカウントを作成して続行」ボタンをクリック
    ![004](./img/004.jpeg "004")   

* 支払い情報の登録  
    * 支払い情報入力画面で支払いをするクレジットカード情報を入力し、  
     「次へ」ボタンをクリック
    ![005](./img/005.jpeg "005")   

* 日本語自動音声電話によりアカウント認証
    * 着信を受け付けられる電話番号を入力し、  
    「すぐに電話番号を受ける」ボタンをクリック
    ![006](./img/006.jpeg "006")   

    * 電話がかかってくるので画面上に表示されたPIN番号を入力  
    ![007](./img/007.jpeg "007")   

    * 本人確認が完了したら「続行してサポートプランを選択」ボタンをクリック   
    ![008](./img/008.jpeg "008")   

* AWSサポートプランの選択  
    * ベーシックを選択し「続行」ボタンをクリック   
    ![009](./img/009.jpeg "009")   

    * 登録が完了したら登録したメールアドレスに対して確認メールが届くので、  
    これで登録完了となります
    ![010](./img/010.jpeg "010")   

ここで作成したアカウントはAWSアカウントと呼ばれ、AWSの操作がすべてできる強い権限となっています。  
そのため認証にはパスワードだけでなくデバイスと組み合わせた多要素認証を設定する必要があります。  
AWSアカウントについては後程説明します。

## AWSの課金と無料利用枠
AWSの利用料金はサービスやリソースを利用した分だけ課金される**従量課金**です。  
AWSではよく利用されるサービスの利用料の見積もりを計算するための[専用計算ツール](http://calculator.s3.amazonaws.com/index.html)が提供されています。

AWS無料利用枠は、AWSにアカウント登録した日から12か月、特定のサービスを一定量まで無料で利用できるサービスです。  
例えば、Amazon　EC2は低スペックのLinuxサーバ用インスタンスを1か月750時間までが無料で利用可能です。

## AWSマネージメントコンソール
AWSマネージメントコンソールは、WebブラウザからAWSを操作できるツールです。  
例えば、Amazon EC2の起動/停止やRDSによるデータベースの作成や管理などができます。  

AWSマネージメントコンソールの利用はAWSサイトにアクセスし  
右上の[アカウント]メニューの[AWSマネージメントコンソール]を選択する事で利用することができます。

* [このページ](http://aws.amazon.com/jp/)に
    アクセスし、[AWSマネジメントコンソール]]をクリック
    ![011](./img/011.jpeg "011")

* ログイン画面で登録したメールアドレスまたは電話番号を入力し、  
  パスワードを入力した後、[サインイン]ボタンをクリック
    ![012](./img/012.jpeg "012")

* ログインが完了するとAWSマネージメントコンソール画面が表示されます  
左上にあるオレンジ色の[コンソール]ボタンまたは[サービス]メニューをクリックすると、  AWSで利用できるサービス一覧表示されます
    ![013](./img/013.jpeg "013")

アカウント情報の確認はナビゲーションバーの[アカウント]メニューをクリックすると表示される下記で確認できます。
![014](./img/014.jpeg "014")

* アカウント
    * 請求書やクレジットカード情報を確認
* 請求とコスト管理
    * サービスごとの課金額などの現在の利用状況を確認
* 認証情報
    * AWSのアカウント情報を確認

リージョン(データセンター)の選択は、アカウントの隣のメニューで選択できます。
![015](./img/015.jpeg "015")

## 次回
次回はAWSのS3とEC2と使ったWEBサーバ構築を説明します。